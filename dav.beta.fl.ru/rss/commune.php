<?
require_once($_SERVER['DOCUMENT_ROOT'] . "/classes/stdf.php");

session_start();
$suid = get_uid();

require_once($_SERVER['DOCUMENT_ROOT'] . "/classes/commune.php");
require_once($_SERVER['DOCUMENT_ROOT'] . "/classes/users.php");

$id     = __paramInit('int', 'id', NULL);
$fuid   = __paramInit('string', 'u', NULL);
$topics = NULL;

// Сюда можно попасть только будучи авторизованным или если введен дополнительный параметр "u",
// идентифицирующий пользователя. В качестве идентификатора используется FUID (см. users::SetUserFUID()).
// Когда пользователь не подписан на канал, то страница формирует ему FUID (или находит уже существующий
// в базе) и перенаправляет на себя же, но с параметром u. В следующий раз он может прийти на страницу
// не авторизуясь, но указывая параметр "u".
// Если указан параметр и при этом пользователь авторизован, то uid, полученный по FUID сверяется с get_uid().
// В общем, идеальная схема такая:
// 1. Юзер жмет на кнопку "rss" в сообществе X. При этом он обязан быть авторизован, иначе кнопки просто не будет.
// 2. Вылазит эта страница, присваивает ему FUID и перенаправляет на себя же, но с параметром "u".
// 3. Страница делает всякие проверки (на отношение юзера к сообществу, например) и выдает ему содержимое канала.
// 4. Юзер подписывается на канал. Адрес канала имеет параметр "u".
// 5. Теперь пользователь может обновлять поток без авторизации.
// 6. Юзер удаляет канал.
// 7. Снова выходит на страницу подписки. Он должен быть авторизован или должен ввести вручную параметр "u" со своим FUID.
// 8. Если он авторизован, то страница вытащит из базы его FUID и далее пункты 3, 4, 5.
// 9. Если он неавторизован, то будет использован FUID из параметра "u" и далее пункты 3, 4, 5.
// Минусы:
// а) FUID могут украсть (подсмотреть, перехватить, или юзер сам даст его).
// б) Делать полную авторизацию по FUID естественно незя, а значит опять будет неудобство (авторизация) с переходом в комментарии через ссылку в RSS-ленте.

if(!$id) exit;

/*if($fuid)
  $uid = users::GetUidByFUID($fuid);
else {
  if($suid && ($fuid=users::SetUserFUID($suid)))
    header("Location: /rss/commune.php?id={$id}&u={$fuid}");
  exit;
}*/

//if(!$uid || !$fuid) exit;
//if($suid && $suid!=$uid) exit;
$reloc = __commShaolin($error, $comm, $top, $restrict_type, $user_mod);
if (!$comm || ($comm['restrict_type'] !== '00' && !$suid)) {
    exit;
}
if (!$reloc && !$error && $comm) {
    $topics = commune::GetTopMessages($id, NULL, NULL, 0, commune::OM_TH_NEW, 0, commune::MAX_TOP_ON_PAGE, false, false);
}
if(!$topics) $topics = array();

header("Content-type: application/rss+xml");
print('<?xml version="1.0" encoding="windows-1251"?>');
?>
<!--  RSS generated by FL.ru RSS Generator on <?=gmdate("D, d M Y H:i:s")?> GMT -->
<rss version="2.0">
<channel>
  <title>Сообщество &#171;<?=xmloutofrangechars($comm['name'])?>&#187; на FL.ru</title>
  <link><?=$host?><?=getFriendlyURL('commune_commune',$id)?></link> 
  <description><![CDATA[Сообщества на сайте www.fl.ru (<?=xmloutofrangechars($comm['name'])?>)]]></description> 
  <language>ru-ru</language> 
<? if(count($topics)) { ?>
  <lastBuildDate><?=date("D, d M Y H:i:s",strtotime($topics[0]['created_time']))?></lastBuildDate> 
<? } ?>
  <docs>http://blogs.law.harvard.edu/tech/rss</docs> 
  <generator>FL.ru RSS Generator</generator>
  <ttl>60</ttl> 
  <image>
    <url><?=$host?>/images/free-lance_logo.jpg</url>
    <title><![CDATA[Сообщество &#171;<?=xmloutofrangechars($comm['name'])?>&#187; на FL.ru]]></title>
    <link><?=$host?><?=getFriendlyURL("commune_commune", $id)?></link> 
  </image>
  <managingEditor>info@fl.ru</managingEditor>
  <webMaster>info@fl.ru</webMaster>
<? 
  foreach($topics as $top)
  {
    if(($top['user_is_banned'] && !($user_mod & commune::MOD_ADMIN)) /*|| $top['moderator_status'] === '0' */
       || ($top['member_is_banned'] && !($user_mod & (commune::MOD_ADMIN | commune::MOD_COMM_AUTHOR | commune::MOD_COMM_MANAGER))))
    {
      continue;
    }
?>
  <item>
    <title><![CDATA[<?=xmloutofrangechars(html_entity_decode($top['title'], ENT_QUOTES, 'cp1251'))?>]]></title>
    <link><?=$host?><?=getFriendlyURL("commune", $top['id'])?></link> 
    <description><![CDATA[<?=xmloutofrangechars(reformat2($top['msgtext'],96,1))?>]]></description>
    <pubDate><?=date("D, d M Y H:i:s",strtotime($top['created_time']))?></pubDate>
    <author><?=($top['user_uname'].' '.$top['user_usurname'].' ['.$top['user_login'].']')?></author>
    <comments><?=$host?><?=getFriendlyURL('commune',$top['id'])?></comments>
  </item>
<? } ?>
</channel>
</rss>
